import {
  BORDER,
  Cell,
  CURRENT,
  Direction,
  EMPTY,
  END,
  MoveType,
  VISITED,
} from './day16.models';
import {
  calculateResult,
  canMoveForward,
  canMoveLeft,
  canMoveRight,
  isNextStepEnd,
  findCurrentPosition,
  findEndPosition,
  parseInput,
  moveForward,
  buildPathTree,
  getNewDirection, eliminateBlindSpots, eliminateAllBlindSpots
} from './day16.utils';

const TEST1_INPUT = `###############
#.......#....E#
#.#.###.#.###.#
#.....#.#...#.#
#.###.#####.#.#
#.#.#.......#.#
#.#.#####.###.#
#...........#.#
###.#.#####.#.#
#...#.....#.#.#
#.#.#.###.#.#.#
#.....#...#.#.#
#.###.#.#.#.#.#
#S..#.....#...#
###############`;
const FINAL_INPUT = `#############################################################################################################################################
#...........#.....#...........#.......#...#.......#.#...........#.......#...#.............#.#.....#.........#...#.........#................E#
#.#########.#.#.#.#########.#.###.###.#.###.#.###.#.#.###.#####.#.###.###.#.#.###.#######.#.#.#.#.#.#####.#.#.#.#.#######.#.#.#####.###.#.#.#
#.#.......#...#.#...........#.....#...#.....#.#...#.....#.....#...........................#...#.#.#.....#.#...#...#.....#.#.#.........#...#.#
#.#.#####.#####.###################.#########.#.###.#######.#.#.#.#.#######.###.#.#.#.#########.#####.###.#########.#.#.#.###############.#.#
#.#.#.......#...#...........#.......#.........#...#.#.#...............#...#...#.#.#...........#.....................#.#.........#.......#.#.#
#.#.#.#####.#.###.#####.###.#.#########.#.#######.#.#.#.#.#.#.#######.###.###.#.#.###########.#####.#.#.###.#.#.###.#.#########.#.#####.###.#
#.#.#.#...#.#.#...#...#...#...#.........#.....#...#...#.#.#.#...............#...#...........#.......#.#.#...#.#...#.#.#...#.......#.........#
#.#.###.#.#.#.#.###.#.###.#####.#.###.###.###.#.#######.#.#####.###########.#############.#.#.#######.#.#.#.###.#.#.#.#.#.#.#######.#######.#
#.#.....#.#...#.#...#.#.#.#.......#...#.#...#...#.......#.....#.#.......#.....#.........#.#.#.#.......#.#.#.......................#...#...#.#
#########.###.###.###.#.#.#.#######.###.#.#.#######.#.#######.#.#.#####.#######.#######.###.###.#####.#.#############.#.#.###.###.###.#.#.#.#
#.......#...#.....................#.#.......#.....#.#.#.....#.#.#.#...........#...#...#.#...#...#...#.#.....#.......#.#.#.....#.#...#.#.#.#.#
#.#####.###.###.#####.#.###.#.###.#.#.###.#####.#.#.#.#.###.#.###.###########.###.#.#.#.#.###.###.#.#.#####.#.#####.#.#.#######.###.###.#.###
#.#.#...#...#...#.#...#.#.....#.#...#.#.........#.#.#.....#.#...#.......#...#...#.#.....#.....#...#.#.#.....#.#.....................#...#...#
#.#.#.###.###.###.#.###.#.#.###.#####.###.#.#####.#.#######.###.#.#####.#.#.#.#.#.#.#.#####.###.###.###.#####.#.#.###.#.#.#.#.#.#.###.#####.#
#.#...#.......#...#.#.....#.......#.#...#.#.#.....#...#.....#...#.#.....#.#.#...#.#.......#.#...#...#...#...#.#.#.......#.#...........#.....#
#.#.#########.###.#.#########.###.#.###.###.###.#####.#.#.###.###.#.#.#.#.#.#.###.#######.###.###.###.###.#.#.#.#########.#########.#.#.###.#
#.................#...#.....#.#...#...#...#...#.......#...#...#.....#.#.#.#.#.....#.....#.#...#.#...#.....#...............#.......#...#.#...#
#.#########.#.#.#.###.#.###.#.#.###.#####.###.#########.###.#.#####.#.#.#.#.#########.###.#.###.###.#.###############.###.#.#####.#.#.#.#.#.#
#.........#.#...#.#...#...#...#...#.....#...#...#.....#...#.#.......#...#.#.....#.....#...#.#.#.....#...........#...#...#.#...#.#...#.#...#.#
#.#.#####.#.#####.#.#####.#######.#.###.###.###.#.###.#.#.#.#.#.#########.#####.###.#.#.###.#.#.###############.#.#.###.#.###.#.###.#.#.#.###
#.#.#.....#.#.....#.....#.#...#...#.......#.#...#...#...#.#.#.#.......#...#.........#.#...#.#...#.........#...#...#.....#...#.#...#.#...#...#
#.#.#.#####.###.#######.#.###.#.#####.#.###.#.###.#.###.#.#.#########.#.#.###############.#.###.#####.###.#.#.#########.#####.#.###.#.#.#.#.#
#.#.#.....#...#.......#.#...#...........#...#...#.#...#...#.........#.#.#.........#.......#...#.......#.#.#.#...#.#.....#.....#.#...#.#...#.#
#.#.#.###.###.#######.#.#.#.#############.#####.#.###.###.#########.#.#.#########.#.#########.#########.#.###.#.#.#.#####.#####.#.#####.#.#.#
#.#.#.#.#...#...#.....#.#.#.#.......#...#.#.....#...#...#...#.......#.#.#.....#...#.........#.#.#.........#...#...#.#...#.#.....#.#.....#...#
#.#.#.#.#.#####.#.#####.###.#.#####.#.#.#.#.#####.#.###.###.#.#######.#.#.###.#.#.#########.#.#.#.#########.#######.#.###.#.#.###.#.#.#.#.###
#.#.#...#.....#.#...#...#...#.....#...#.#.#.#.#...#...#.#...#.#.......#...#...#.#.#.#.....#...#.#.#.#.................#...#.#.#...#.#.#.....#
###.###.###.#.#.#.###.###.#.#####.#####.#.#.#.#.#####.#.#.###.#.###########.###.#.#.#.###.#####.#.#.#.#.###############.###.###.###.#.#.#.#.#
#...#.....#...#.#.#...#...#...#...#...#...#.#...#.....#.#.#.#...#...#.......#...#...#.#.....#.....#...........#.........#.....#.....#...#...#
#.#####.#####.#.###.#####.#.###.###.#.#####.#.#####.###.#.#.###.#.###.#######.#######.#.###.#.#####.#.#######.#.#########.###.#####.###.#.#.#
#.......#...#.#.....#...#.#.....#...#...#...#.#.....#...#.#...........#.....#...#.....#.....#.#...#...#...#...#.#.#...#...#.#.........#.#.#.#
#.#####.#.#.#.#######.#.#.#.#####.#####.###.#.#.###.#.#.#.#########.#.#.###.###.#.#########.#.###.#.###.#.#####.#.#.#.#.###.#########.#.#.###
#...#.#...#.#.....#...#...#...#.......#.....#...#...#.#.........#...#...#.....#.....#...#...#...#.#.#.#.#.....#.#...#.#...............#.#...#
###.#.#.###.#.###.#.#.###.###.#.#####.###########.###.#########.#.#.###.#.###.#####.#.#.#.#####.#.#.#.#.#####.#.#####.#######.#.#.#.#####.#.#
#.#.#.#...#.....#.#.#...#...#.#.#.....#.......#...#.#.....#...#...#.......#...#...#...#.#...#...#...#.#.#.....#.....#.........#.#.#.......#.#
#.#.#.#.#.###.#.#.#.###.###.#.###.###.#.###.###.###.#####.#.#############.#.###.#.###.#.###.#.###.###.#.###.#######.#.###.#.###.#.#######.#.#
#...#...#.#.....#.....#...#.#.#...#.....#...#...#.....#...#...............#.#...#...#.#...#...#.#...#.#...#.....#...#.......................#
#.#######.#.#.###########.#.#.#.###.#.#######.###.#####.#####.###.#########.#.#####.#####.#####.###.#.###.#####.#.#####.###.#.#####.#.#.###.#
#...#.....#...#...........#.#.#.#...#.#.....#.#.......#...............#.....#.#...#.#...#.....#...#.#...#.#...#.#...#.#...#.#.#...#...#.#...#
###.#.###.###.#.#.#########.#.#.#.#####.###.#.#####.#.#####.###########.#####.#.#.#.#.#.#.#.#.###.#.#.#.#.#.###.###.#.###.#.#.#.#.###.#.#.###
#...#...#...#.#.#...#.#.....#.#.#...#...#.#.#.....#.#.#...#...#...#...#.#.......#...#.#.#.#.#.....#...#.#.#...#...#.#.......#.#.#...#.#.#.#.#
#.###.#.#####.#.###.#.#.#####.#.#.#.#.###.#.#.#.#.###.#.#.###.#.#.#.#.#.#.###.###.###.#.###.#####.#.#####.###.###.#.###.#####.#.###.###.#.#.#
#.#...#.#.....#...#.#...#.....#.#.#.#.#...#.#...#...#...#...#...#...#...#...#...#...#.#.#...#...#.#.#...#.#...#...#...#...#...#.#.#.....#...#
#.#####.#.#.#.#####.###.#.#####.###.#.#.#.#.#######.#####.#################.###.###.#.#.#.###.###.#.#.#.#.#.#.#.#####.#####.###.#.#########.#
#.#.....#.#.#.....#.......#...#...#.....#.#.......#.#...#...........#.....#.#...#.....#...#.......#.#.#...#.#.............#...#.#...#.......#
#.#.###.#.###.###.#.#######.#.#.#.###.#####.#####.#.#.#.#.#####.#.#.###.#.###.#####.#######.#######.#.#####.#######.#.###.###.#.#.###.#######
#...#...#.......#.#.#.......#.......#.#...#.#.#...#...#...#...#.#.#...#.#.....#.....#...#...#.......#...#.#.......#.#...#.....#.#...#...#...#
###.#########.###.#.###.#.#########.#.#.#.#.#.#.#########.#.#.#.#.###.#.###.#.#.###.#.#.#.#.#.#########.#.#.###.###.###.#######.#.#.###.###.#
#...#...#.....#...#.....#...#...#...#.#.#...#...#.#.....#...#.#.#.#...#.#.#.#.#...#.#.#.....#.#.....#...#.#.#.#.....#.#.#.......#.#...#.#...#
#.###.#.#.###.#.###.#######.#.#.#.###.#.#####.###.#.#.#######.###.#.###.#.#.#.###.#.#.#####.#.#.###.#.###.#.#.#######.#.#.#######.#.###.#.#.#
#...#.#...#.....#...#.........#...#...#.#...#.#...........#.#...#.......#...#...#.#.#.#...#.#.#.#...#.#.....#...#...#...#.#.......#...#...#.#
###.#.#.#########.#.#.#.#########.#.###.###.#.#####.###.#.#.###.#.#######.###.###.#.###.#.###.#.#.###.###.###.#.###.#.#.#.#.#########.#####.#
#...#.#.#...#.....#.#.#.........#.#.#.#...#.#.....#.#...#.....#...#...#...#.#.....#.....#.....#.....#...#.#...#.....#.#...#.....#.....#.....#
#.###.###.#.#.#####.#.#####.###.#.#.#.###.#.#####.###.#.#####.#####.#.#.###.#.#################.###.###.#.#.#.###.###.#.###.#.###.###.#.#####
#.........#.#.#.#...#.#.#...#.#.#.....#.#.#.....#...#.#.#...#.#.....#.#.#...............#.......#.#.....#.#.....#.#...#...#...#...#...#.....#
###.#.#.###.#.#.#.###.#.#.###.#.#####.#.#.#.###.###.#.###.#.###.###.###.#.###############.#######.#######.###.#.###.#####.###.#.###.#.#####.#
#...#...#...#.#.....#...#...#.#.....#...#.#.#...#...#...#.#...#.#.#.#...#.#...#...........#.............#...#.#.....#.#...#...#.....#.....#.#
#########.###.#######.#####.#.#####.#####.#.#.#.#.#####.#.###.#.#.#.#.###.#.#.#.###.#########.#############.#.#######.#.###.#########.###.#.#
#.......#.#.#.......#.#.....#.............#.#.#.#.#...#.#.#.#...#.#...#.#.#.#...#...#...#...#.............#.#.....#...#.#.....#...#.....#...#
#.#####.#.#.#.#####.#.#.#####.#############.#.###.#.#.#.#.#.#####.#####.#.#.#.#######.#.#.#.###.#########.#.#####.###.#.#####.#.#.###.#.###.#
#.....#...#.#.....#.....#.......#.....#.....#.......#...#.#.......#...#...#...........#...#...#...#.....#.#.....#...#.#...#.....#.........#.#
#.###.#####.#####.#####.#####.###.###.#.#.#.###########.#.#.###.#.#.#.#########.#############.###.#.###.#.#####.###.#.###.#######.#######.#.#
#.#...#.....#...#...#...#...#.#...#.#.....#.....#.......#.#.#...#...#...#.....#.....#.....#.#.#...#.#...#.....#.#.....#...........#...#.#.#.#
###.###.#.###.#.#.#.#.#.#.#.###.###.#.#####.###.#.#######.###.###.#.###.#.###.#####.#.###.#.#.#.#.#.#.#####.###.#####.#.###.#.#.###.#.#.#.#.#
#.....#...........#.#.#.#.#.....#...#.......#.#.#.#.#.........#...#.#...#...#...#.....#...#.#.#.#...#.#...#...#...#...#.....#.#.#...#.#...#.#
#.###.#.###########.#.#.#.###.###.#.#######.#.#.#.#.#.#########.###.#.###.#.###.#######.###.#.#.###.#.#.#.###.###.#.#########.#.#.###.#.###.#
#...#.....#.........#.#.#.......#.#...#.....#.#.#...#.........#.....#...#.#.#.#...#...#...#.#...#...#...#...#...#.#.#.#...#...#.#.#.#.#.....#
#.#.#####.#######.###.#.#######.#.#####.#.#.#.#.#######.#.#.#.#########.###.#.###.#.#.###.#.#####.#.#######.###.#.#.#.#.#.#.###.#.#.#.#####.#
#.#.....#.#...#.......#...#...#.#.#.....#.#.#.#.........#...#.........#...#.#...#.#.#.............#.....#...#...#.#...#.#.#...#.#...#...#.#.#
#######.#.#.#.#.###.#.#####.#.#.#.#.#####.#.#.#############.#########.###.#.#.#.#.###########.#######.#.#.#.#.#.#.###.#.#.#.#.#.###.###.#.#.#
#.......#...#.#.#...#.....#.#...#...#...#.#...#.....#.....#.........#...#...#.#.#.......#...#...#.....#...#.#.#.#...#.#.#.#.#...#.#...#.#.#.#
#.###########.#.#.###.###.#.#######.#.#.#.###.#.#.#.#.###.#########.#########.#.#######.#.#####.#.#########.#.#####.###.#.#.#.#.#.###.#.#.#.#
#.#.........#...#.....#.#.#.#.....#...#.#...#...#.#.#.#.#.......#...#.......#.#...#...#.#.....#.#...#.....#.#...#...#...#.#.#.#.....#.#.#...#
#.#.#######.###.#######.#.#.#.###.#####.###.###.#.#.#.#.#######.#.###.###.#.#.###.#.#.#.#####.#.###.#.###.#.#.#.#.###.###.#.#.#######.#.###.#
#.#.#.....#...#.........#.#...#.#.#.....#...#...#.#.#...#...#...#.#...#.#...#...#...#.#.....#.....#.#.#.....#.#.#.#.......#.#.....#...#.....#
#.#.#.###.#.#####.#######.#####.#.#.#####.###.###.###.###.#.#.#.#.#.###.#.#####.#####.#.#.#.#####.#.#.#######.#.#.#.###.#########.#.#######.#
#.#.#.#.#.#.....#.#.......#...#...#.#...#.#...#.#.....#...#...#.#...#.....#.....#.#...#.#.#...#.#...#...#.....#...#.#...........#...#.......#
#.#.#.#.#.#####.#.#.#####.#.#.#.###.#.#.#.#.###.#.#####.#######.#####.#####.#.###.#.###.#.###.#.#.#####.###.#######.###########.#####.#####.#
#.#.#.#.#...#...#.#...#...#.#...#.#.#.#...#.#.........#.#...#...#...#...#.#.#...#...#...#.#...#...#...#...#.#...#.....#.#.....#...#...#...#.#
#.###.#.###.#.###.###.###.#.#####.#.#.#####.###########.###.#.###.#.###.#.#.###.#####.#.#.###.#####.#.###.#.#.#.#.###.#.#.###.###.#.###.###.#
#.......#...#...#...#...#.#...#.....#.#.#...#.....#...#...#.#...#.#.....#.....#.......#.....#.#...#.#.#...#.#.#...#...#.#.....#...#.#.....#.#
#.#######.###.#.###.#.#.#.###.###.###.#.#.###.###.#.#.#.#.#.###.#.#############.###########.#.#.#.#.#.#.###.#.#####.###.#.#.#.#.###.#####.#.#
#...#...#...#.#.....#.#.#...#.......#.#...#.....#...#.#.#.#...#.#.............#.#.........#.#...#.#.#...#...#.....#.#.....#.#.#.#.......#...#
#####.#.###.#.#######.#.###.###.#####.#.###.###.#####.#.#.###.#.#############.#.#####.###.#.#####.#.#####.###.#.#.#.###.###.###.#######.#.###
#.....#...#.#.#.......#.#.#.#.#.......#...#.#...#...#.#.....#.......#...#...#.#.......#.....#.....#.#.....#.#...#.#...#.................#...#
#.#.#####.#.#.#.#####.#.#.#.#.#########.#.#.#.###.#.#.#####.#####.#.#.###.#.#.#####.#####.#.#.#####.#.#####.#.#####.#.#####################.#
#.#.....#...#.#.#.....#.#.........#.......#.#...#.#.#.....#.......#...#...#...#...#.#...#...#.#.....#.#.......#...#.#.#...........#...#.....#
#.#.###.#####.#.###.###.#.#########.###########.#.#.#####.#.#####.#.###.#######.###.#.#.#####.#.#.###.#.#######.#.###.#.#########.#.#.#.#####
#.#.........#.#...#.#...#.#...#.....#.............#...#...#.#...#.#.#...#...........#.#...#...#.#.#.#.#...#...#.#...#...#.........#.#.#...#.#
#.#.#.#######.#.#.###.#.###.#.#.#####.###.###.#####.#.#.###.#.#.#.#.#.###.###########.###.#.#####.#.#.###.#.#.#.###.#####.#########.#####.#.#
#.#.#.#.........#.....#.#...#...#.#...#...#.......#.#.#.#...#.#.#.#.#.#.#.#...#.......#...#.......#.#...#...#.#.#.#.......#.........#.....#.#
#.#.###.#########.#.#####.#######.#.#.#.#########.###.#.#####.#.#.#.#.#.#.#.#.#.#######.###########.###.#####.#.#.#########.#.#######.###.#.#
#.#...#...........#.......#...#...#.#.#.....#...#.....#.......#.#...#.......#.#...#...#.#.........#.....#.....#.#...#.....#.#...#...#.#.....#
#.#.#.#######.#.###.#######.###.#.#.#.#####.#.#.###############.###.#.#.###.###.#.#.#.#.###.#####.#.#.###.#####.###.#.###.#.###.#.#.#.###.#.#
#.#.#.....#...#...#...#.....#...#.........#...#.#.....#.....#.#.....#...#...#.....#.#.#...#.#...#.#...#.#.#...#...#...#...#...#.......#...#.#
#.###.###.#.###.#.###.###.###.#####.###########.#.###.#.###.#.#####.###.#.###.#.###.#.###.#.#.#.#.###.#.#.#.#####.#.###.#.###.#########.#.###
#.....#...#.#...#...#...#.....#...#.#...#.......#.#.....#.#...#...#.#.#.#...#...#...#...#.#.#.#...#...#.....#.....#...#.#.#...#.........#...#
###.#.###.#.#.###.#.###.#####.#.#.###.#.#.#######.#######.###.###.#.#.#.#####.#.#.###.#.#.#.#.#.###.#########.#######.#.#.#.#########.#.#.#.#
#...#.#.....#...#.#...#.....#.#.#...#.#.#.#.....#...#...#.........#.#.#.#...#.#.#.......#.#...#.#...#.........#.#.....#.#...#.......#.#...#.#
#.###.#.#.###.#.#.#.#######.###.#.#.#.#.#.#.###.#.#.#.#.###########.#.#.#.#.###.#.#.#####.#.###.#.###.#########.#.#####.#####.#####.#.#####.#
#.#...#.#.#...#.#.#.......#.....#...#.#.#.#...#.....#.#.....#...........#.#.....#.#.....#.#.#...#.....#.........#.......#.....#...#.#.#.....#
#.#.#.#.#.#.###.#.#####.#.#######.###.#.#.#.#####.#.#.#####.#.#.#######.#.#########.###.#.#.#.#########.###############.#.###.#.###.#.#.###.#
#.#.......#.#...#.....#.#.#.......#...#.#.#.#...#.#...#...#...#...................#.#.#...#.#.....#.....#.............#.#.#.#.#.....#.#.#...#
#.#.#.###.#.#.#####.#.###.#.#######.###.#.#.#.#.#.#####.#######.#.#.#####.#####.#.#.#.#####.###.###.###.#.#######.#####.#.#.#.#.#####.#.#.###
#.....#.....#.#...#.#.#...#.....#...#.....#.#.#.#.#...#.........#.#...#.....#.....#.#.....#.#.#.......#.#.............#.#...#.#.#.......#.#.#
#.###.#.#.###.#.#.#.#.#.#######.#.#.#.#######.#.#.#.###.#######.#.###.#####.#.#####.#.###.#.#.#########.#.#.#########.#.###.#.#.#.###.###.#.#
#.....#...#...#.#.#.#.#.#.....#.#.#.#.#...#...#.#.#.#...#.....#.#...#.....#.#.#.#...#.#...#.......#.....#.#.........#...#...#...............#
#.###.###.###.#.#.###.#.#.#.#.#.#.#.###.#.#.###.#.#.#.###.#####.#########.###.#.#.###.#.#####.#####.###.#.###.###.#.#########.#####.#.#.###.#
#...............#.....#...#.#.#.#.#.#...#...#...#.#.#.....#.....#.......#.....#...#...#.......#...#.#.#.#...#.#...#...#.....#.#.....#.....#.#
#.#.#.###.#####.#######.###.###.#.#.#.#######.###.#.###.#.#.#.###.###.#####.###.###.#######.###.#.#.#.#.###.###.#####.###.#.#.#.#####.#####.#
#.#.#.....#.....#...#...#.#.....#.#.#.....#...#.#.#.......#.#.#...#.#.........#.#...#.#...#...#.#...#...#.#...#.#.........#...#...#.........#
#.#.#######.#####.#.#.###.#######.#.#####.#.###.#.#.#######.###.###.#########.#.#.###.#.#.#.###.#####.###.###.#.#.###############.#.#.#######
#...#.....#...#...#...#...........#.....#.#.......#.......#...#.#.........#.#...#.#.....#.#.#...#.....#.....#...#.......#.........#.#.......#
###.#.###.###.#.###.#.#.#######.#.###.#.#.###.#.#####.#######.#.#.#####.#.#.#####.#.###.#.###.#####.###.#.#######.#.#####.#####.#.#.#.#####.#
#...#.#.#.....#.#.#...#...#.....#...#.#...#...#.....#.#...#...#.#.#.....#...#...#...#...#...#.....#.#.............#.#.....#.#...#.#.#.....#.#
#####.#.###.###.#.#####.#.#.#######.#######.#######.###.#.#.#.#.#.#.###.#####.#.#.###.#####.#.###.#.#.###.#####.#.#.#.#####.#.#####.#####.#.#
#.....#.......#.#.....#...#.#...#.#.......#...#.....#...#...#.#.#.#.#...#.....#...#...#.....#...#...#...#.......#.#.#...#...#.....#.#.#...#.#
#.#####.###.#.#.#.#.#.#####.#.#.#.#.#.###.#.#.#.#####.###.#####.#.#.###.#.#########.###.#########.#.#.#.#.#.###.#.#.###.#.#.#####.#.#.#.###.#
#...#...#...#.#.#.#.#.....#...#.#.#.#.#.#...#.#.#.....#.......#.#.#...#.#.....#.#...#.....#.......#.......#.#...#.#...#...#.#...#...#...#...#
###.#.#.#.#.###.#.#.#####.###.#.#.#.#.#.#####.#.#.###.#.#####.#.#.###.#######.#.#.#######.#.###.#####.#####.#.###.#.#######.#.#.###.#####.#.#
#...............#.#.#...#...#.#.#.....#.........#.#...#.#.....#.#.#.#.......#...#.#...#.....#.#...........#.....#.#.....#...#...............#
#.#########.#.#.###.#.#####.###.#########.#######.#.#.#.#.#####.#.#.#######.###.#.#.#.#######.#.#######.#.#######.#####.#.#########.#.#####.#
#.#...........#.....#.....#.....#.......#.#...#...#.#.#.#.......#.#.......#...#...#.#.............#.....#.........#.....#.#.........#.....#.#
#.#.#######.#.###########.###.###.#####.#.#.#.#####.#.#.#######.#.#.#######.###.#.#.#####.#########.###############.#.#.#.###.#####.#.#.#.#.#
#.#.......#.....#.........#...#...#...#.#...#...#...#.#.#...#.......#...........#...#.....#.........#.......#.......#...#...#.#.....#...#.#.#
#.###.###.#.#####.###.#####.###.#.#.###.#######.#.#####.#.#.#.#.#####.#####.#.#######.#.#.#.###########.###.#.#############.#.#.###.#.###.#.#
#...#...#...........#.......#...#.....#...#...#...#...#...#.#.#.#.....#...#.#.#...#...#.................#...#...#.........#...#.....#.#...#.#
#.#.#######.#######.#####.###.###.###.###.#.#.#.###.#.#####.#.#.#.#####.#.#.#.#.#.#.#####.###.###.###.#####.###.#.#####.###.###.###.#.#.###.#
#.#...#.......#...#.#...#.#...#.......#.#...#.#.#...#...........................#.#...#...#...#...#...#...#.#...#.#.................#.#.#...#
#.###.#.#####.#.#.###.#.#.#.###.#.###.#.#####.#.#.#######.#.#.#.###.#.#.#####.#.#.###.#.#.###.#.#######.#.###.#.#.#.#.###.###.#.#.#.#.#.###.#
#...#...#...#...#.#...#.#.#.#...#...............#...#...#...#.#.....#...#...#.#.#...#.#.....#.#.....#...#.....#.#.#.#...#.....#.#...#.#...#.#
###.#####.#.#####.#.###.#.#.#.#.#####.#####.#.#.###.#.#.#####.#.#####.###.#.#.#.#####.###.#.#.#####.#.#####.#####.#.#####.#####.#.#.#####.###
#...#.....................#.#.#.#...#.#...#.#.#.#...#.#.......................#.#...#.....#.............#...#.....#...#.......#.#.#.....#...#
#.#####.###.#.#.#.###.#.#.#.#.#.#.#.###.#.###.###.###.#.#####.#.#.###.#######.#.#.#.###.#.#.#####.#.###.#.###.#######.#.#.#.###.#.#.#.#.#.#.#
#...................#.#.#.#.#.#...#.....#.#...#.....................#.#.......#.#.#.....#.#.#...#.#...#.#.#...#.....#...#.#.#...#.....#.#.#.#
#########.###.#.#.###.#.###.#############.#.###.###.#######.#.#.#.#.#.#.#######.#.###.###.#.#.#.###.###.#.#.###.###.#####.#.#.#.#######.###.#
#.....#...#...#.#.#...#...#.#...#...#.....#.#...#...#.....#.#.....#.#.#.#.....#.#.#...#.....#.#.....#...#.#.#...#.#...#...#.#...#.....#.....#
#.###.#.#####.#.#.#.#####.#.#.#.#.#.#.###.#.#.###.###.###.#.#.#.#.#.###.###.#.#.#.#####.#.###.#####.#.#####.###.#.###.#.#.#.###.#.#.###.###.#
#S..#.........#.........#.....#...#...#...#...#.......#...#.......#.........#...#.............#...............................#...#.........#
#############################################################################################################################################`;

describe('Day16Utils', () => {
  describe('canMoveForward', () => {
    test.each([
      [
        [
          [CURRENT, EMPTY],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [EMPTY, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, BORDER],
          [EMPTY, BORDER],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [EMPTY, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [EMPTY, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, BORDER],
          [END, BORDER],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [END, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, END],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [END, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
    ])(
      'should return true for %j %s',
      (input: Cell[][], direction: Direction) => {
        const currentPosition = findCurrentPosition(input);
        expect(currentPosition).not.toBeUndefined();
        if (!currentPosition) {
          return;
        }
        expect(canMoveForward(input, currentPosition, direction)).toBe(true);
      }
    );

    test.each([
      [
        [
          [CURRENT, BORDER],
          [BORDER, BORDER],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [BORDER, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, BORDER],
          [BORDER, BORDER],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [BORDER, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, BORDER],
          [BORDER, BORDER],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [BORDER, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, VISITED],
          [VISITED, VISITED],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [VISITED, VISITED],
          [CURRENT, VISITED],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [VISITED, VISITED],
          [CURRENT, VISITED],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [VISITED, VISITED],
          [VISITED, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, VISITED],
          [VISITED, VISITED],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [VISITED, VISITED],
          [CURRENT, VISITED],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [VISITED, VISITED],
          [CURRENT, VISITED],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [VISITED, VISITED],
          [VISITED, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, VISITED],
          [VISITED, VISITED],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [VISITED, VISITED],
          [CURRENT, VISITED],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [VISITED, VISITED],
          [CURRENT, VISITED],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [VISITED, VISITED],
          [VISITED, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, EMPTY],
          [VISITED, EMPTY],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [VISITED, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [CURRENT, VISITED],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [VISITED, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, EMPTY],
          [VISITED, EMPTY],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [VISITED, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [CURRENT, VISITED],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [VISITED, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, EMPTY],
          [VISITED, EMPTY],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [VISITED, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [CURRENT, VISITED],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [VISITED, CURRENT],
        ] as Cell[][],
        'left' as Direction,
      ],
    ])(
      'should return false for %j %s',
      (input: Cell[][], direction: Direction) => {
        const currentPosition = findCurrentPosition(input);
        expect(currentPosition).not.toBeUndefined();
        if (!currentPosition) {
          return;
        }
        expect(canMoveForward(input, currentPosition, direction)).toBe(false);
      }
    );
  });
  describe('canMoveLeft', () => {
    test.each([
      [
        [
          [CURRENT, EMPTY],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [EMPTY, CURRENT],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [EMPTY, CURRENT],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, EMPTY],
          [BORDER, BORDER],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [EMPTY, CURRENT],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [EMPTY, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [CURRENT, BORDER],
          [EMPTY, BORDER],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, END],
          [BORDER, BORDER],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [END, CURRENT],
          [BORDER, BORDER],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [END, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [CURRENT, BORDER],
          [END, BORDER],
        ] as Cell[][],
        'left' as Direction,
      ],
    ])(
      'should return true for %j %s',
      (input: Cell[][], direction: Direction) => {
        const currentPosition = findCurrentPosition(input);
        expect(currentPosition).not.toBeUndefined();
        if (!currentPosition) {
          return;
        }
        expect(canMoveLeft(input, currentPosition, direction)).toBe(true);
      }
    );

    test.each([
      [
        [
          [CURRENT, BORDER],
          [BORDER, BORDER],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [BORDER, CURRENT],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [BORDER, CURRENT],
          [BORDER, BORDER],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, VISITED],
          [VISITED, VISITED],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [VISITED, VISITED],
          [VISITED, CURRENT],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [VISITED, VISITED],
          [CURRENT, VISITED],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [VISITED, CURRENT],
          [VISITED, VISITED],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [CURRENT, VISITED],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [VISITED, CURRENT],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [VISITED, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [CURRENT, EMPTY],
          [VISITED, EMPTY],
        ] as Cell[][],
        'left' as Direction,
      ],
    ])(
      'should return false for %j %s',
      (input: Cell[][], direction: Direction) => {
        const currentPosition = findCurrentPosition(input);
        expect(currentPosition).not.toBeUndefined();
        if (!currentPosition) {
          return;
        }
        expect(canMoveLeft(input, currentPosition, direction)).toBe(false);
      }
    );
  });
  describe('canMoveRight', () => {
    test.each([
      [
        [
          [EMPTY, CURRENT],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [EMPTY, CURRENT],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [EMPTY, CURRENT],
          [BORDER, BORDER],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [BORDER, CURRENT],
          [BORDER, EMPTY],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [EMPTY, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [END, CURRENT],
          [BORDER, BORDER],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, END],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [BORDER, CURRENT],
          [BORDER, END],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [END, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'left' as Direction,
      ],
    ])(
      'should return true for %j %s',
      (input: Cell[][], direction: Direction) => {
        const currentPosition = findCurrentPosition(input);
        expect(currentPosition).not.toBeUndefined();
        if (!currentPosition) {
          return;
        }
        expect(canMoveRight(input, currentPosition, direction)).toBe(true);
      }
    );

    test.each([
      [
        [
          [BORDER, CURRENT],
          [BORDER, BORDER],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [BORDER, CURRENT],
          [BORDER, BORDER],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [BORDER, BORDER],
          [CURRENT, BORDER],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [BORDER, CURRENT],
          [END, END],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [END, END],
          [CURRENT, BORDER],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [END, CURRENT],
          [END, BORDER],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [BORDER, END],
          [CURRENT, END],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [VISITED, CURRENT],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'down' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [CURRENT, VISITED],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [EMPTY, CURRENT],
          [EMPTY, VISITED],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [VISITED, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'left' as Direction,
      ],
    ])(
      'should return false for %j %s',
      (input: Cell[][], direction: Direction) => {
        const currentPosition = findCurrentPosition(input);
        expect(currentPosition).not.toBeUndefined();
        if (!currentPosition) {
          return;
        }
        expect(canMoveRight(input, currentPosition, direction)).toBe(false);
      }
    );
  });
  describe('findCurrentPosition', () => {
    it('should return undefined if no current position', () => {
      const input = [
        [EMPTY, EMPTY],
        [EMPTY, EMPTY],
      ] as Cell[][];
      expect(findCurrentPosition(input)).toBeUndefined();
    });
    test.each([
      [
        [
          [CURRENT, EMPTY],
          [EMPTY, EMPTY],
        ] as Cell[][],
        0,
        0,
      ],
      [
        [
          [EMPTY, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        0,
        1,
      ],
      [
        [
          [EMPTY, EMPTY],
          [EMPTY, CURRENT],
        ] as Cell[][],
        1,
        1,
      ],
      [
        [
          [EMPTY, CURRENT],
          [EMPTY, EMPTY],
        ] as Cell[][],
        1,
        0,
      ],
    ])(
      `should return %j for (%d, %d)`,
      (board: Cell[][], x: number, y: number) => {
        const position = findCurrentPosition(board);
        expect(position).not.toBeUndefined();
        if (!position) {
          return;
        }
        expect(position.x).toBe(x);
        expect(position.y).toBe(y);
      }
    );
  });
  describe('findEndPosition', () => {
    it('should return undefined if no end position', () => {
      const input = [
        [EMPTY, EMPTY],
        [EMPTY, EMPTY],
      ] as Cell[][];
      expect(findEndPosition(input)).toBeUndefined();
    });
    test.each([
      [
        [
          [END, EMPTY],
          [EMPTY, EMPTY],
        ] as Cell[][],
        0,
        0,
      ],
      [
        [
          [EMPTY, EMPTY],
          [END, EMPTY],
        ] as Cell[][],
        0,
        1,
      ],
      [
        [
          [EMPTY, EMPTY],
          [EMPTY, END],
        ] as Cell[][],
        1,
        1,
      ],
      [
        [
          [EMPTY, END],
          [EMPTY, EMPTY],
        ] as Cell[][],
        1,
        0,
      ],
    ])(
      `should return %j for (%d, %d)`,
      (board: Cell[][], x: number, y: number) => {
        const position = findEndPosition(board);
        expect(position).not.toBeUndefined();
        if (!position) {
          return;
        }
        expect(position.x).toBe(x);
        expect(position.y).toBe(y);
      }
    );
  });
  describe('parseInput', () => {
    it('should parse input', () => {
      const input = parseInput(TEST1_INPUT);
      expect(Array.isArray(input)).toBeTruthy();
      expect(input.length).toBe(15);
      expect(input.every((row) => Array.isArray(row))).toBeTruthy();
      expect(input.every((row) => row.length === 15)).toBeTruthy();
      expect(findCurrentPosition(input)).toEqual({ x: 1, y: 13 });
    });
  });
  describe('calculateResult', () => {
    test.each([
      [['change_position', 'change_position'] as MoveType[], 2],
      [['change_position', 'change_direction'] as MoveType[], 1001],
      [['change_direction', 'change_position'] as MoveType[], 1001],
      [['change_direction', 'change_direction'] as MoveType[], 2000],
    ])(`should return %j for %j`, (path: MoveType[], result: number) => {
      expect(calculateResult([path])).toBe(result);
    });
  });
  describe('checkIfNextStepIsEnd', () => {
    test.each([
      [
        [
          [CURRENT, END],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [END, CURRENT],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [END, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [EMPTY, CURRENT],
          [EMPTY, END],
        ] as Cell[][],
        'down' as Direction,
      ],
    ])('should return true for %j', (board: Cell[][], direction: Direction) => {
      const currentPosition = findCurrentPosition(board);
      expect(currentPosition).not.toBeUndefined();
      if (!currentPosition) {
        return;
      }
      expect(isNextStepEnd(board, currentPosition, direction)).toBeTruthy();
    });
    test.each([
      [
        [
          [CURRENT, EMPTY],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'right' as Direction,
      ],
      [
        [
          [EMPTY, CURRENT],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'left' as Direction,
      ],
      [
        [
          [EMPTY, EMPTY],
          [CURRENT, EMPTY],
        ] as Cell[][],
        'up' as Direction,
      ],
      [
        [
          [EMPTY, CURRENT],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'down' as Direction,
      ],
    ])(
      'should return false for %j',
      (board: Cell[][], direction: Direction) => {
        const currentPosition = findCurrentPosition(board);
        expect(currentPosition).not.toBeUndefined();
        if (!currentPosition) {
          return;
        }
        expect(isNextStepEnd(board, currentPosition, direction)).toBeFalsy();
      }
    );
  });
  describe('moveForward', () => {
    test.each([
      [
        [
          [CURRENT, EMPTY],
          [EMPTY, EMPTY],
        ] as Cell[][],
        'right' as Direction,
      ],
    ])(
      `should move forward for %j, %s`,
      (board: Cell[][], direction: Direction) => {
        const currentPosition = findCurrentPosition(board);
        expect(currentPosition).not.toBeUndefined();
        if (!currentPosition) {
          return;
        }
        const newBoard = moveForward(board, currentPosition, direction);
        expect(newBoard[currentPosition.y][currentPosition.x]).toBe(VISITED);
        switch (direction) {
          case 'right':
            expect(newBoard[currentPosition.y][currentPosition.x + 1]).toBe(
              CURRENT
            );
            break;
          case 'left':
            expect(newBoard[currentPosition.y][currentPosition.x - 1]).toBe(
              CURRENT
            );
            break;
          case 'up':
            expect(newBoard[currentPosition.y - 1][currentPosition.x]).toBe(
              CURRENT
            );
            break;
          case 'down':
            expect(newBoard[currentPosition.y + 1][currentPosition.x]).toBe(
              CURRENT
            );
            break;
        }
      }
    );
  });
  describe('getNewDirection', () => {
    test.each([
      ['right' as Direction, 'left' as const, 'up' as Direction],
      ['right' as Direction, 'right' as const, 'down' as Direction],
      ['left' as Direction, 'left' as const, 'down' as Direction],
      ['left' as Direction, 'right' as const, 'up' as Direction],
      ['up' as Direction, 'left' as const, 'left' as Direction],
      ['up' as Direction, 'right' as const, 'right' as Direction],
      ['down' as Direction, 'left' as const, 'right' as Direction],
      ['down' as Direction, 'right' as const, 'left' as Direction],
    ])(
      `should return %j for %j, %s`,
      (
        currentDirection: Direction,
        rotation: 'left' | 'right',
        newDirection: Direction
      ) => {
        expect(getNewDirection(currentDirection, rotation)).toBe(newDirection);
      }
    );
  });
  describe('buildPathTree', () => {
    test.each([
      [
        [
          [BORDER, BORDER, BORDER, BORDER, BORDER],
          [BORDER, CURRENT, EMPTY, END, BORDER],
          [BORDER, BORDER, BORDER, BORDER, BORDER],
        ] as Cell[][],
        1,
      ],
      [
        [
          [BORDER, BORDER, BORDER, BORDER],
          [BORDER, CURRENT, EMPTY, BORDER],
          [BORDER, EMPTY, END, BORDER],
          [BORDER, BORDER, BORDER, BORDER],
        ] as Cell[][],
        2,
      ],
      [
        [
          [BORDER, BORDER, BORDER, BORDER],
          [BORDER, CURRENT, BORDER, BORDER],
          [BORDER, EMPTY, END, BORDER],
          [BORDER, BORDER, BORDER, BORDER],
        ] as Cell[][],
        1,
      ],
      [
        [
          [BORDER, BORDER, BORDER, BORDER],
          [BORDER, CURRENT, END, BORDER],
          [BORDER, EMPTY, EMPTY, BORDER],
          [BORDER, BORDER, BORDER, BORDER],
        ] as Cell[][],
        2,
      ],
      [
        [
          [BORDER, BORDER, BORDER, BORDER,  BORDER],
          [BORDER, CURRENT, EMPTY, EMPTY,  BORDER],
          [BORDER, EMPTY, BORDER, EMPTY,  BORDER],
          [BORDER, EMPTY, EMPTY, END,  BORDER],
          [BORDER, BORDER, BORDER, BORDER,  BORDER],
        ] as Cell[][],
        2,
      ],
      [
        [
          [BORDER, BORDER, BORDER, BORDER,  BORDER],
          [BORDER, CURRENT, EMPTY, EMPTY,  BORDER],
          [BORDER, BORDER, EMPTY, BORDER,  BORDER],
          [BORDER, EMPTY, EMPTY, END,  BORDER],
          [BORDER, BORDER, BORDER, BORDER,  BORDER],
        ] as Cell[][],
        1,
      ],
      [
        [
          [BORDER, BORDER, BORDER, BORDER,  BORDER],
          [BORDER, CURRENT, EMPTY, EMPTY,  BORDER],
          [BORDER, EMPTY, BORDER, EMPTY,  BORDER],
          [BORDER, EMPTY, EMPTY, EMPTY, BORDER],
          [BORDER, BORDER, BORDER, BORDER,  BORDER],
        ] as Cell[][],
        0
      ],
      [
        [
          [BORDER, BORDER, BORDER, BORDER,  BORDER],
          [BORDER, CURRENT, EMPTY, EMPTY,  BORDER],
          [BORDER, EMPTY, END, EMPTY,  BORDER],
          [BORDER, EMPTY, EMPTY, EMPTY, BORDER],
          [BORDER, BORDER, BORDER, BORDER,  BORDER],
        ] as Cell[][],
        8
      ],
    ])(
      `should build path tree for %j`,
      (board: Cell[][], numberOfSolutions: number) => {
        const currentPosition = findCurrentPosition(board);
        expect(currentPosition).not.toBeUndefined();
        if (!currentPosition) {
          return;
        }
        const pathTree = buildPathTree(board, 'right', []);
        expect(pathTree.length).toEqual(numberOfSolutions);
      }
    );
  });
  describe('Eliminate blind spots', () => {
    test.each([
//       [
//         [
//           [BORDER, BORDER, BORDER, BORDER,  BORDER],
//           [BORDER, CURRENT, EMPTY, EMPTY,  BORDER],
//           [BORDER, BORDER, EMPTY, BORDER,  BORDER],
//           [BORDER, EMPTY, EMPTY, END, BORDER],
//           [BORDER, BORDER, BORDER, BORDER,  BORDER],
//         ] as Cell[][],
//         [
//           [BORDER, BORDER, BORDER, BORDER,  BORDER],
//           [BORDER, CURRENT, EMPTY, BORDER,  BORDER],
//           [BORDER, BORDER, EMPTY, BORDER,  BORDER],
//           [BORDER, BORDER, EMPTY, END, BORDER],
//           [BORDER, BORDER, BORDER, BORDER,  BORDER],
//         ] as Cell[][],
//       ],
//       [
//         parseInput(TEST1_INPUT),
//         parseInput(`
// ###############
// #...#####....E#
// #.#.#####.###.#
// #.....###...#.#
// #.###.#####.#.#
// #.###.......#.#
// #.#######.###.#
// #...........#.#
// ###.#.#####.#.#
// #...#.....#.#.#
// #.#.#.###.#.#.#
// #.....#...#.#.#
// #.###.#.#.#.#.#
// #S###.....#...#
// ###############`),
//       ],
      [
        parseInput(`#############################################################################################################################################
###########################################################################################################################################E#
###########################################################################################################################################.#
###################################################################...................#####################################################.#
###################################################################.#################.#####################################################.#
#######################################...#############.............#################.........#####.................#############.......###.#
#######################################.#.#############.#####################################.#####.###############.#############.#####.###.#
#################################.......#.#############.#####################################.......###############.#######.......#####.....#
#################################.#######.#############.###########################################################.#######.#################
###########################.......#######.#########.....###########################################################.........#################
###########################.#############.#########.#########################################################################################
###########################.#############.#####...#.#########################################################################################
###########################.#############.#####.#.#.#########################################################################################
###########################.#############.......#.#.#########################################################################################
###########################.#####################.#.#########################################################################################
###########################...#############.###...#...#######################################################################################
#############################.#############.###.#####.#######################################################################################
#######################.....#.#############...#.......#######################################################################################
#######################.###.#.###############.###############################################################################################
#######################...#...###############...#############################################################################################
#########################.#####################.#############################################################################################
#########################.###################...#############################################################################################
#########################.###################.###############################################################################################
#########################...#################...#############################################################################################
###########################.###################.#############################################################################################
###########################.###############.....#############################################################################################
###########################.###############.#################################################################################################
###########################.###############.#################################################################################################
###########################.###############.#################################################################################################
###########################.#######...#####.#################################################################################################
###########################.#######.#.#####.#################################################################################################
###########################.#####...#...###.#################################################################################################
###########################.#####.#####.###.#################################################################################################
###########################...###.....#.....#################################################################################################
#############################.#######.#######################################################################################################
#############################.###.....#######################################################################################################
#############################.###.###########################################################################################################
#############################.#...###########################################################################################################
#############################.#.#############################################################################################################
#############################.#.#############################################################################################################
#############################.#.#############################################################################################################
#############################.#.#############################################################################################################
#############################.#.#############################################################################################################
#########################.....#.#############################################################################################################
#########################.#####.#############################################################################################################
###################.......#...#.#############################################################################################################
###################.#######.#.#.#############################################################################################################
###################.###...#.#...#############################################################################################################
###################.###.#.###################################################################################################################
###################.....#...#################################################################################################################
###########################.#################################################################################################################
#################...#.......#################################################################################################################
#################.###.#######################################################################################################################
#############.....###.#######################################################################################################################
#############.#######.#######################################################################################################################
#############.#######.#######################################################################################################################
#############.#######.#######################################################################################################################
#############.#######.#######################################################################################################################
#############.#######.#######################################################################################################################
#############.#######.#######################################################################################################################
#############.#######.#######################################################################################################################
#############.....###...#####################################################################################################################
#################.#####.#####################################################################################################################
#################.###...#####################################################################################################################
#################.###.#######################################################################################################################
#.....#...........###.#######################################################################################################################
#.###.#.#############.#######################################################################################################################
#...#...#############.#######################################################################################################################
###.#################.#######################################################################################################################
###.....#######.......#######################################################################################################################
#######.#######.#############################################################################################################################
#.......#######.#############################################################################################################################
#.#############.#############################################################################################################################
#.#############.#############################################################################################################################
#.#############.#############################################################################################################################
#.###.....#####...###########################################################################################################################
#.###.###.#######.###########################################################################################################################
#.###.###.#######.###########################################################################################################################
#.###.###.#######.###########################################################################################################################
#.###.###...#####.###########################################################################################################################
#.###.#####.#####.###########################################################################################################################
#.....###...#####...#########################################################################################################################
#########.#########.#########################################################################################################################
#####...#.#########.#########################################################################################################################
###...#...#####.....#########################################################################################################################
###.###########.#############################################################################################################################
###.###########.#############################################################################################################################
###.###########.#############################################################################################################################
###.###########...###########################################################################################################################
###.#############.###########################################################################################################################
###.#############.###########################################################################################################################
###.#############.###########################################################################################################################
###...#######.....###########################################################################################################################
#####.#######.###############################################################################################################################
#####.....#...###############################################################################################################################
#########.#.#################################################################################################################################
#########.#.#################################################################################################################################
###########.#################################################################################################################################
#########...#################################################################################################################################
#########.###################################################################################################################################
#########.###################################################################################################################################
#########.###################################################################################################################################
#########.###################################################################################################################################
#########.###################################################################################################################################
#########.###################################################################################################################################
#########.###################################################################################################################################
#########.###################################################################################################################################
#########.###################################################################################################################################
#########.......#############################################################################################################################
###############.#############################################################################################################################
###########.....#############################################################################################################################
###########.#################################################################################################################################
###########...###############################################################################################################################
#############.###############################################################################################################################
###########...###############################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########.#################################################################################################################################
###########...#...###########################################################################################################################
#############.#.#.###########################################################################################################################
#############...#.###########################################################################################################################
#################.###########################################################################################################################
#############.....###########################################################################################################################
#############.###############################################################################################################################
#############.###############################################################################################################################
#############.###############################################################################################################################
#.....#######.###############################################################################################################################
#.###.#######.###############################################################################################################################
#S###.........###############################################################################################################################
#############################################################################################################################################`),
        parseInput(FINAL_INPUT)
      ]
    ])('should eliminate blind spots for %j', (board: Cell[][], finalBoard: Cell[][]) => {
      const boardAfterElimination = eliminateAllBlindSpots(board);
      for(let y = 0; y < board.length; y++) {
        for(let x = 0; x < board[y].length; x++) {
          expect(boardAfterElimination[y][x]).toBe(finalBoard[y][x]);
        }
      }
    });
  })
  describe('Task 1', () => {
    it ('should correctly calculate test 1 example', () => {
      const testInput = `###############
#.......#....E#
#.#.###.#.###.#
#.....#.#...#.#
#.###.#####.#.#
#.#.#.......#.#
#.#.#####.###.#
#...........#.#
###.#.#####.#.#
#...#.....#.#.#
#.#.#.###.#.#.#
#.....#...#.#.#
#.###.#.#.#.#.#
#S..#.....#...#
###############`;
      const input = parseInput(testInput);
      const pathTree = buildPathTree(input, 'right', []);
      const paths = pathTree.filter(path => path.foundEnd).map(path => path.moves);
      expect(calculateResult(paths)).toBe(7036);
    });
    it('should correctly calculate test 1 without blindspots', () => {
      const testInput = `###############
#.......#....E#
#.#.###.#.###.#
#.....#.#...#.#
#.###.#####.#.#
#.#.#.......#.#
#.#.#####.###.#
#...........#.#
###.#.#####.#.#
#...#.....#.#.#
#.#.#.###.#.#.#
#.....#...#.#.#
#.###.#.#.#.#.#
#S..#.....#...#
###############`;
      const input = parseInput(testInput);
      const withoutBlindSpots = eliminateAllBlindSpots(input);
      const pathTree = buildPathTree(withoutBlindSpots, 'right', []);
      const paths = pathTree.filter(path => path.foundEnd).map(path => path.moves);
      expect(calculateResult(paths)).toBe(7036);
    })
    it('should correctly calculate test 2 example', () => {
      const testInput = `#################
#...#...#...#..E#
#.#.#.#.#.#.#.#.#
#.#.#.#...#...#.#
#.#.#.#.###.#.#.#
#...#.#.#.....#.#
#.#.#.#.#.#####.#
#.#...#.#.#.....#
#.#.#####.#.###.#
#.#.#.......#...#
#.#.###.#####.###
#.#.#...#.....#.#
#.#.#.#####.###.#
#.#.#.........#.#
#.#.#.#########.#
#S#.............#
#################`;
      const input = parseInput(testInput);
      const pathTree = buildPathTree(input, 'right', []);
      const paths = pathTree.filter(path => path.foundEnd).map(path => path.moves);
      expect(calculateResult(paths)).toBe(11048);
    });
    it('should correctly calculate test 2 without blindspots', () => {
      const testInput = `#################
#...#...#...#..E#
#.#.#.#.#.#.#.#.#
#.#.#.#...#...#.#
#.#.#.#.###.#.#.#
#...#.#.#.....#.#
#.#.#.#.#.#####.#
#.#...#.#.#.....#
#.#.#####.#.###.#
#.#.#.......#...#
#.#.###.#####.###
#.#.#...#.....#.#
#.#.#.#####.###.#
#.#.#.........#.#
#.#.#.#########.#
#S#.............#
#################`;
      const input = parseInput(testInput);
      const withoutBlindSpots = eliminateAllBlindSpots(input);
      const pathTree = buildPathTree(withoutBlindSpots, 'right', []);
      const paths = pathTree.filter(path => path.foundEnd).map(path => path.moves);
      expect(calculateResult(paths)).toBe(11048);
    });
    it('should correctly calculate final input', () => {
      const input = parseInput(FINAL_INPUT);
      const pathTree = buildPathTree(input, 'right', []);
      const paths = pathTree.filter(path => path.foundEnd).map(path => path.moves);
      expect(calculateResult(paths)).toBe(0);
    });
    it ('should correctly calculate final input without blindspots', () => {
      const input = parseInput(`#############################################################################################################################################
###############...#########...###.....#######.....#######.......#.....###...#.............#########.........#...#.........#################E#
###############.#.#########.#.###.###.#######.###.#######.#####.#.###.###.#.#.###.#######.#########.#####.#.#.#.#.#######.#################.#
###.......#####.#...........#.....#...#######.#...#######.....#...........................#########...###.#...#...#.....#.#################.#
###.#####.#####.###################.#########.#.###########.#.#.#.#.#######.###.#.#.#.###############.###.#########.#.#.#.#################.#
###.#####...#...#######.....#.......###.......#...#####...............#####...#.#.#...........#####.................#.#.........#.......###.#
###.#######.#.#########.###.#.#########.#.#######.#####.#.###.#######.#######.#.#.###########.#####.#.#.###.###.###.#.#########.#.#####.###.#
###.###...#.#.#####...#...#...#.........#.....#...#####.#.###.........#######...#...........#.......#.#.###.###...#.#.#...#.......#####.....#
###.###.#.#.#.#####.#.###.#####.#.###.###.###.#.#######.#.#################################.#########.#.###.###.#.#.#.#.#.#.#################
###.....#.#...###...#.###.#.......#...###...#...###.....#.....###.......#######.........###.###.......#.###.......................#####...###
#########.###.###.###.###.#.#######.#####.#.#######.#.#######.###.#####.#######.#######.###.###.#######.#############.#.#.###.###.#####.#.###
#.......#...#.....................#.#.......###...#.#.#.....#.###.#####.......#...#...#.#...#...#...###.....#.......#.#.#.....###...###.#.###
#.#####.###.###.#####.#.###.#.###.#.#.###.#####.#.#.#.#.###.#.###.###########.###.#.#.#.#.###.###.#.#######.#.#####.#.#.###########.###.#.###
#.###...#...#...###...#.#.....###...#.###.......#.#.#...###.#...#.......#####...#.#.....#.....#...#.###.....#.#.....................#...#...#
#.###.###.###.#####.###.#.#.#########.#####.#####.#.#######.###.#.#####.#####.#.#.#.#.#########.###.###.#####.#.#.###.#.#.#.#.#.#.###.#####.#
#.#...###.....#####.###...#...#######...###.###...#...#.....#...#.#.....#####...#.#.......###...#...#...#...#.#.#.......#.#...........#.....#
#.#.#########.#####.#########.#########.###.###.#####.#.#.###.###.#.#.#.#####.###.#######.###.###.###.###.#.#.#.#########.#########.#.#.###.#
#.............#####...#.....#.#########...#...#.......#...#...###...#.#.#####.....#######.#...###...#.....#...............#.......#...#.#...#
#.#########.#########.#.###.#.###########.###.#########.###.#.#####.#.#.#################.#.#######.#.###############.#####.#####.#.#.#.#.###
#.........#.#######...#...#...###########...#...#.....#...#.#.......#...###############...#.###.....#...........#...#...###...###...#.#...###
###.#####.#.#######.#####.#################.###.#.###.#.#.#.###.#######################.###.###.###############.#.#.###.#####.#####.#.#.#.###
###.#.....#.#######.....#.#################.#...#...#...#.#.###.......#...#############...#.###.#####.....#####...#.....#####.#####.#...#...#
###.#.#####.###########.#.#################.#.###.#.###.#.#.#########.#.#.###############.#.###.#####.###.#############.#####.#####.###.#.#.#
###.#.....#...#########.#...#############...#...#.#...#...#.........#.#.#.........#.......#...#.......###.#########.....#.....###...###...#.#
###.#.###.###.#########.###.#############.#####.#.###.###.#########.#.#.#########.#.#########.###########.#########.#####.#######.#####.#.#.#
###.#.###.###...#######.###.#.......#...#.#.....#...#...#...#.......#.#.#.....#...#.........#.###.........#########.#####.#######.#.....#...#
###.#.###.#####.#######.###.#.#####.#.#.#.#.#####.#.###.###.#.#######.#.#.###.#.###########.#.###.#################.#####.#######.#.#.#.#.###
###.#...#.....#.#####...#...#.....#...#.#.#.###...#...#.#...#.#.......#...#...#.#####.....#...###.###...............###...#####...#.#.#.....#
###.###.###.#.#.#####.###.#.#####.#####.#.#.###.#####.#.#.###.#.###########.###.#####.###.#######.###.#.###############.#######.###.#.#.#.#.#
#...###.###...#.###...###.#.###...#...#...#.#...###...#.#.###...#####.......#...#####.#.....#.....#.....#######.........#.....#.....#...#...#
#.#####.#####.#.###.#####.#.###.###.#.#####.#.#####.###.#.#####.#####.#######.#######.#.###.#.#####.#.#########.#########.###.#####.#####.###
#.......#...#.#.....#...#.#.....#...#...###.#.#.....#...#.#####.......#.....#...#.....#.....#.#####...#...#####.#######...###.........###.###
#.#####.#.#.#.#######.#.#.#.#####.#####.###.#.#.###.#.#.#.#########.#.#.###.###.#.#########.#.#####.###.#.#####.#######.#############.###.###
#...###...#.#.....#...#...#...###.....#.....#...#...#.#.........#...#...#.....#.....#...#...#...###.###.#.....#.#######...............###...#
###.###.###.#.###.#.#.###.###.#######.###########.###.#########.#.#.###.#.###.#####.#.#.#.#####.###.###.#####.#.#############.#.#.#.#####.#.#
###.###...#.....#.#.#...#...#.###.....#########...###.....#####...#.......#...#...#...#.#...#...#...###.###...#.....#.........#.#.#.......#.#
###.#####.###.#.#.#.###.###.#.###.###.#########.#########.###############.#.###.#.#####.###.#.###.#####.###.#######.#.###.#.###.#.#######.#.#
#...#####.#.....#...###...#.#.#...#...#######...#######...###.............#.#...#...###...#...###...###...#.....#...#.......................#
#.#######.#.#.###########.#.#.#.###.#########.#########.#####.###.#########.#.#####.#####.#########.#####.#####.#.#####.###.#.#####.#.#.###.#
#...#.....#...###.........#.#.#.#...###.....#.#########...........#####.....#.#...#.#...#.....#####.#####.#####.#...###...#.#.#...#...#.#...#
###.#.#######.###.#########.#.#.#.#####.###.#.#############.###########.#####.#.#.#.#.#.###.#.#####.#####.#####.###.#####.#.#.#.#.#####.#.###
#...#...#####.###...###.....#.#.#...#...###.#.....#########...#...#...#.#####...#...#.#.###.#.....#.#####.#####...#.#####...#.#.#...###.#.###
#.#####.#####.#####.###.#####.#.###.#.#####.#.#.#.###########.#.#.#.#.#.#####.###.###.#.###.#####.#.#####.#######.#.#########.#.###.###.#.###
#.#####.#.....#####.###.#.....#.###.#.#####.#...#...#########...#...#...#####...#...#.#.#...#####.#.#...#.#...#...#...#####...#.###.....#...#
#.#####.#.###.#####.###.#.#####.###.#.#####.#######.###########################.###.#.#.#.#######.#.#.#.#.#.#.#.#####.#####.###.###########.#
#.#.....#.###.....#.......#...#...#...#####.......#.#...#...........###...###...###...#...#.......#.#.#...#.#.............#...#.#####.......#
#.#.#####.###.###.#.#######.#.#.#.###.#####.#####.#.#.#.#.#######.#.###.#.###.#####.#######.#######.#.#####.#######.#.###.###.#.#####.#######
#...#####.....###.#.###.....#.......#.#...#.###...#...#...#...###.#...#.#.....#.....#####...#.......#...###.....###.#...#.....#.#...#...#####
###.#########.###.#.###.#.#########.#.#.#.#.###.#########.#.#.###.###.#.###.#.#.###.#####.#.#.#########.###.###.###.###.#######.#.#.###.#####
#...#...#.....#...#.....#...#...#...#.#.#...#...###...###...#.###.#...#.###.#.#...#.#####...#.#.....#...###.###.....###.#.......#.#.###.#...#
#.###.#.#.###.#.###.#######.#.#.#.###.#.#####.#####.#.#######.###.#.###.###.#.###.#.#########.#.###.#.#####.###########.#.#######.#.###.#.#.#
#...#.#...###...#...#.........#...#...#.#####.#####.....#####...#.......#...#.###.#.###...###.#.#...#.###...#########...#.#.......#...#...#.#
###.#.###########.###.#.#########.#.###.#####.#########.#######.#.#######.###.###.#.###.#.###.#.#.###.###.###########.#.#.#.#########.#####.#
#...#.###...#.....###.#.........#.#.###...###.....###...#######...#####...###.....#.....#.....#.....#...#.#...#######.#...#...###.....#.....#
#.###.###.#.#.#######.#####.###.#.#.#####.#######.###.#################.#######################.###.###.#.#.#.#######.#.###.#.###.###.#.#####
#.........#.#.#######.###...###.#...#####.#.....#...#.###...###.....###.#################.......###.....#.#.....###...#...#...#...#...#.....#
#####.#.###.#.#######.###.#####.#########.#.###.###.#.###.#.###.###.###.#################.###############.#####.###.#####.###.#.###.#.#####.#
#####...#...#.#######.###...###.....#####.#.#...#...#...#.#...#.###.#...###...#...........###############...###.....###...#...#.....#.....#.#
#########.###.#######.#####.#######.#####.#.#.###.#####.#.###.#.###.#.#####.#.#.###########################.###########.###.#########.###.#.#
#.......#.###.......#.#.....#######.......#.#.###.#...#.#.###...###...#####.#...#####...#...###...........#.###########.###...#...###...#...#
#.#####.#.###.#####.#.#.###################.#.###.#.#.#.#.#################.#.#######.#.#.#.###.#########.#.###########.#####.#.#.###.#.###.#
#.....#...###.....#.....#########.....#.....#.......#...#.#####...#...#####...........#...#...#...#.....#.#.....#######...###...#.........#.#
#####.###########.#####.#########.###.#.#.#.#############.#####.#.#.#.#########.#############.###.#.###.#.#####.#########.#######.#######.#.#
###...#...###...#...#...#...###...###.....#.....#########.###...#...#...#.....#.....#.....###.#...#.#...#...###.#######...........#...###.#.#
###.###.#.###.#.#.#.#.###.#.###.#####.#####.###.#########.###.###.#.###.#.###.#####.#.###.###.#.#.#.#.#####.###.#######.###.#.#.###.#.###.#.#
#.....#...........#.#.###.#.....#####.......###.#####.........#...#.#...#...#...###...#...###.#.#...#.#...#...#...#####.....#.#.#...#.#...#.#
#.###.#.###########.#.###.###.#############.###.#####.#########.###.#.#####.###.#######.#####.#.###.#.#.#.###.###.###########.#.#.###.#.###.#
#...#.....#######...#.###.......#######.....###.#####.......###.....#...###.###...#####...###...#...#...#...#...#.#####...#...#.#.###.#.....#
###.#####.#######.###.#########.#######.#.#.###.#######.#.#.###########.###.#####.#######.#######.#.#######.###.#.#####.#.#.###.#.###.#####.#
###.....#.#...#.......#####...#.###.....#.#.###.........#...###########...#.#####.#######.........#.....#...#...#.#####.#.#...#.#...#...###.#
#######.#.#.#.#.###.#.#####.#.#.###.#####.#.###############.#############.#.#####.###########.#######.#.#.#.#.###.#####.#.###.#.###.###.###.#
#.......#...#.#.#...#.....#.#...###.#...#.#...#...###.....#.........#####...#####.......#####...#.....#...#.#.###...###.#.###...###...#.###.#
#.###########.#.#.###.###.#.#######.#.#.#.###.#.#.###.###.#########.###################.#######.#.#########.#.#####.###.#.###.#######.#.###.#
#.###########...#.....###.#.#.....#...#.#...#...#.###.###.......#...#.......###########.#######.#...#.....#.#...#...#...#.###.#######.#.###.#
#.#############.#########.#.#.###.#####.###.###.#.###.#########.#.###.###.#.###########.#######.###.#.###.#.#.#.#.###.###.###.#######.#.###.#
#.###.....#####...#######.#...###.#.....#...#...#.###.###...#...#.#...###...###########.....###...#.#.###...#.#.#.#.......###.....#...#.....#
#.###.###.#######.#######.#######.#.#####.###.###.###.###.#.#.#.#.#.#####.#############.#.#.#####.#.#.#######.#.#.#.###.#########.#.#######.#
#.###.###.#######.#.......#...#...#.#...#.#...###.....#...#...#.#...#.....#############.#.#...###...#...###...#...#.###.........#...#.......#
#.###.###.#######.#.#######.#.#.###.#.#.#.#.###########.#######.#####.#################.#.###.#########.###.#######.###########.#####.#####.#
#.###.###...#####.#...#####.#...###.#.#...#.###########.#####...#...#...#############...#.###.#####...#...#.#...#.....###.....#...#...#####.#
#.###.#####.#####.###.#####.#######.#.#####.###########.#####.###.#.###.#############.#.#.###.#####.#.###.#.#.#.#.###.###.###.###.#.#######.#
#.....###...#...#...#...###...###...#.###...#.....#...#...###...#.#.....#######.......#.....#.#...#.#.#...#.#.#...#...###.....#...#.#######.#
#########.###.#.###.#.#.#####.###.###.###.###.###.#.#.#.#.#####.#.#############.###########.#.#.#.#.#.#.###.#.#####.#####.#.###.###.#######.#
#####...#...#.#.....#.#.#####.....###.#...###...#...#.#.#.#####.#.............#.#####.....#.#...#.#.#...#...#...###.###...#.###.###.....#...#
#####.#.###.#.#######.#.#######.#####.#.#######.#####.#.#.#####.#############.#.#####.###.#.#####.#.#####.###.#.###.###.###.###.#######.#.###
#.....#...#.#.#.......#.#######.......#...###...#...#.#.....###.....#####...#.#.......###...#.....#.#.....###...###...#.................#...#
#.#.#####.#.#.#.#######.###############.#.###.###.#.#.#####.#####.#.#####.#.#.#####.#####.#.#.#####.#.###############.#####################.#
#.#.....#...#.#.#######.###########.......###...#.#.#.....#.......#.###...#...#####.#...#...#.###...#.#########...###.#...........#####.....#
#.#.###.#####.#.#######.###########.###########.#.#.#####.#######.#.###.###########.#.#.#####.###.###.#########.#.###.#.#########.#####.#####
#.#.....#####.#...###...###...#.....#.............#...#...###...#.#.#...#...........#.#...#...###.###.#########.#...#...#.........#####...###
#.#.#########.#.#.###.#####.#.#.#####.###.###.#######.#.#####.#.#.#.#.###.###########.###.#.#####.###.#########.###.#####.###############.###
#.#.###.........#.....###...#...###...#...###.....###.#.#####.#.#.#.#.###.#####.......#...#.......###...#######.###.......#...#######.....###
#.#.###.#########.#.#####.#########.#.#.#########.###.#.#####.#.#.#.#.###.#####.#######.###############.#######.###########.#.#######.###.###
#.#...#...........#.......#########.#.#.....#...#.....#.......#.#...#.....#####...#...#.###.......#.....#######.#####.....#.#...#...#.###.###
#.###.#######.#.###.###############.#.#####.#.#.###############.###.#.#.#######.#.#.#.#.###.#####.#.#.#########.#####.###.#.###.#.#.#.###.###
#.###.....#...#...#...#############...#####...#.###############.....#...#####.....#.#.#...#.#...#.#...#########...#...#...#...#.......#...###
#.###.###.#.###.#.###.#########################.###################.###.#####.#.###.#.###.#.#.#.#.###.###########.#.###.#.###.#########.#.###
#.....###.#.#...#...#...#######...###...#.......###################.###.#####...#...#...#.#.#.#...#...#######.....#...#.#.#...#######...#...#
###.#.###.#.#.###.#.###.#######.#.###.#.#.#########################.###.#######.#.###.#.#.#.#.#.###.#########.#######.#.#.#.#########.#.#.#.#
#...#.#.....#...#.#.###.....###.#...#.#.#.#######...#...###########.###.#...###.#.......#.#...#.#...#.........###.....#.#...#.......#.#...#.#
#.###.#.#.###.#.#.#.#######.###.#.#.#.#.#.#######.#.#.#.###########.###.#.#.###.###.#####.#.###.#.###.###########.#####.#####.#####.#.#####.#
#.#...#.#.#...#.#.#.......#.....#...#.#.#.#######...#.#.....#...........#.#.....###.....#.#.#...#.....###########.......#####.#####.#.#.....#
#.#.#.#.#.#.###.#.#######.#######.###.#.#.#######.#.#.#####.#.#.#######.#.#########.###.#.#.#.#########################.#####.#####.#.#.###.#
#.#.......#.#...#.....###.#.......#...#.#.###...#.#...#####...#...................#.###...#.#...###.....#.........#####.#####.#.....#.#.#...#
#.#.#.###.#.#.#######.###.#.#######.###.#.###.#.#.#############.###.###########.#.#.#######.###.###.###.#.#######.#####.#####.#.#####.#.#.###
#.....#.....#.#...###.#...#.....#...###...###.#.#.#############.###...#######.....#.#.....#.###.....###.#.............#.#####.#.#.......#.###
#.###.#.#.###.#.#.###.#.#######.#.#.#########.#.#.#############.#####.#######.#####.#.###.#.###########.#.#.#########.#.#####.#.#.###.###.###
#.....#...###.#.#.###.#.#...###.#.#.###...#...#.#.#############.#####.....###.###...#.#...#...#####.....#.#.........#...#####...............#
#.###.###.###.#.#.###.#.#.#.###.#.#.###.#.#.###.#.#############.#########.###.###.###.#.#####.#####.###.#.#######.#.#########.#####.#.#.###.#
#...............#.....#...#.###.#.#.#...#...#...#.#########.....#.....###.....#...#...#.......#...#.###.#...###...#...###...#.#.....#...###.#
#.#.#.###.#####.#######.###.###.#.#.#.#######.###.#########.#####.###.#####.###.###.###########.#.#.###.###.###.#####.###.#.#.#.#####.#####.#
#.#.#.....#.....#...#...###.....#.#.#.....#...###.#########.###...###.........#.#...###...#####.#...#...###...#.#.........#...#...#.........#
#.#.#######.#####.#.#.###########.#.#####.#.#####.#########.###.#############.#.#.#####.#.#####.#####.#######.#.#.###############.#.#.#######
#...#.....#...#...#...#...........#.....#.#.......#########...#.#.......#####...#.#.....#.###...###...#...###...#...#####.........#.#.......#
#####.###.###.#.###.#.#.#######.#.#####.#.###.#.#############.#.#.#####.#########.#.###.#.###.#####.###.#.#######.#.#####.#####.###.#######.#
#####.###.....#.###...#...#.....#...###...#...#.....###...#...#.#.#.....#####...#...#...#...#.....#.#.............#.#.....###...###.#######.#
#####.#####.###.#######.#.#.#######.#######.#######.###.#.#.###.#.#.#########.#.#.###.#####.#####.#.#.###.#####.#.#.#.#######.#####.#######.#
#.....#.....###.###...#...#.#...###.......#...#.....#...#...###.#.#.#####.....#...#...#.....#####...#...#.......#.#.#...#...#.....#.#######.#
#.#####.###.###.###.#.#####.#.#.###.#.###.#.#.#.#####.###.#####.#.#.#####.#########.###.#########.#.#.#.#.#.###.#.#.###.#.#.#####.#.#######.#
#...#...#...###.###.#.....#...#.###.#.###...#.#.#####.#.......#.#.#...###.....###...###...#.......#.......#.#...#.#.###...#.#####...#####...#
###.#.#.#.#.###.###.#####.#####.###.#.#######.#.#####.#.#####.#.#.###.#######.###.#######.#.###.#####.#####.#.###.#.#######.#######.#####.#.#
#...............###.#####...###.###...###.......###...#.#.....#.#.###.......#...#.#...###...###...........#...###.#.....#...#######.........#
#.#########.#.#.###.#######.###.#########.#########.###.#.#####.#.#########.###.#.#.#.#########.#######.#.#######.#####.#.#########.#.#######
#.#...........#.....#######.....#.......#.#...#####.###.#.......#.#########.###...#.#...........###.....#.........#.....#.###.......#.....###
#.#.#######.#.###############.###.#####.#.#.#.#####.###.#######.#.#########.###.#.#.#####.#########.###############.#.#.#.###.#####.#.#.#.###
#.#.......#...###.....#####...#...#####.#...#...#...###.#...#.....###...........#...#.....#.........#########.......#...#...#.#.....#...#.###
#.#######.#.#####.###.#####.###.#.#####.#######.#.#####.#.#.#.#.#####.#####.#.#######.#.#.#.#################.#############.#.#.###.#####.###
#...#####.........###.......#...#.....#...#...#...#...#...#.#.#.#.....#...#.#.#####...#...........###########...#.......###...#.....###...###
#.#.#######.#############.###.###.###.###.#.#.#.###.#.#####.#.#.#.#####.#.#.#.#####.#####.###.###.#############.#.#####.###.###.###.###.#####
#.#...#.......#...###...#.#...#.......###...#.#.#...#...........................###...#...###.#...#####...###...#.#.................###.#####
#.###.#.#####.#.#.###.#.#.#.###.#.###.#######.#.#.#######.#.#.#.###.#.#.#####.#.#####.#.#.###.#.#######.#.###.###.#.#####.###.#.#.#.###.#####
#...#...#...#...#.#...#.#.#.###.#...............#...#...#...#.#.....#...#...#.#.#####.#.....#.#.....#...#.....###.#.#####.....#.#...###...###
###.#####.#.#####.#.###.#.#.###.#############.#####.#.#.#####.#.#####.###.#.#.#.#####.###.#.#.#####.#.###########.#.#####.#####.#.#.#####.###
#...###...................#.###.#...###...###.###...#.#.......................#.#...#.....#.............#####.....#...#.....###.#.#.....#...#
#.#####.###.#.#.#.###.#.###.###.#.#.###.#.###.###.###.#.#####.#.#.###########.#.#.#.###.#.#.#######.###.#####.#######.#.#.#.###.#.#.#.#.###.#
#.................###.#.###.###...#.....#.#...#.....................###.......#.#.#.....#.#.#...###.###.###...#.....#...#.#.#...#.....#.###.#
#########.###.#.#.###.#.###.#############.#.###.###########.#.#.#.#.###.#######.#.#######.#.#.#.###.###.###.###.###.#####.#.#.#.#######.###.#
#.....#...###.#.#.#...#...#.#...#...#.....#.#...###########.#.....#.###.###...#.#.#####.....#.#.....#...###.###.###...#...#.#...#...###.....#
#.###.#.#####.#.#.#.#####.#.#.#.#.#.#.#####.#.#############.#.#.#.#.###.###.#.#.#.#####.#.###.#####.#.#####.###.#####.#.#.#.###.#.#.###.###.#
#S###.........#.....#####.....#...#...#####...#############.......#.........#...#.............#####.........................###...#.........#
#############################################################################################################################################
`);
      const pathTree = buildPathTree(input, 'right', []);
      const paths = pathTree.filter(path => path.foundEnd).map(path => path.moves);
      expect(calculateResult(paths)).toBe(0);
    })
    it ('should correctly calculate final input without blindspots2', () => {
      const input = parseInput(`#############################################################################################################################################
    ###########################################################################################################################################E#
    ###########################################################################################################################################.#
    ###################################################################...................#####################################################.#
    ###################################################################.#################.#####################################################.#
    #######################################...#############.............#################.........#####.................#############.......###.#
    #######################################.#.#############.#####################################.#####.###############.#############.#####.###.#
    #################################.......#.#############.#####################################.......###############.#######.......#####.....#
    #################################.#######.#############.###########################################################.#######.#################
    ###########################.......#######.#########.....###########################################################.........#################
    ###########################.#############.#########.#########################################################################################
    ###########################.#############.#####...#.#########################################################################################
    ###########################.#############.#####.#.#.#########################################################################################
    ###########################.#############.......#.#.#########################################################################################
    ###########################.#####################.#.#########################################################################################
    ###########################...#################...#...#######################################################################################
    #############################.#################.#####.#######################################################################################
    #######################.....#.#################.......#######################################################################################
    #######################.###.#.###############################################################################################################
    #######################...#...###############################################################################################################
    #########################.###################################################################################################################
    #########################.###################################################################################################################
    #########################.###################################################################################################################
    #########################...#################################################################################################################
    ###########################.#################################################################################################################
    ###########################.#################################################################################################################
    ###########################.#################################################################################################################
    ###########################.#################################################################################################################
    ###########################.#################################################################################################################
    ###########################.#################################################################################################################
    ###########################.#################################################################################################################
    ###########################.#################################################################################################################
    ###########################.#################################################################################################################
    ###########################...###############################################################################################################
    #############################.###############################################################################################################
    #############################.###############################################################################################################
    #############################.###############################################################################################################
    #############################.###############################################################################################################
    #############################.###############################################################################################################
    #############################.###############################################################################################################
    #############################.###############################################################################################################
    #############################.###############################################################################################################
    #############################.###############################################################################################################
    #########################.....###############################################################################################################
    #########################.###################################################################################################################
    ###################.......###################################################################################################################
    ###################.#########################################################################################################################
    ###################.###...###################################################################################################################
    ###################.###.#.###################################################################################################################
    ###################.....#...#################################################################################################################
    ###########################.#################################################################################################################
    #####################.......#################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    #####################...#####################################################################################################################
    #######################.#####################################################################################################################
    #####################...#####################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    #####################.#######################################################################################################################
    ###############.......#######################################################################################################################
    ###############.#############################################################################################################################
    ###############.#############################################################################################################################
    ###############.#############################################################################################################################
    ###############.#############################################################################################################################
    ###############.#############################################################################################################################
    ###############...###########################################################################################################################
    #################.###########################################################################################################################
    #################.###########################################################################################################################
    #################.###########################################################################################################################
    #################.###########################################################################################################################
    #################.###########################################################################################################################
    #################...#########################################################################################################################
    ###################.#########################################################################################################################
    ###################.#########################################################################################################################
    ###############.....#########################################################################################################################
    ###############.#############################################################################################################################
    ###############.#############################################################################################################################
    ###############.#############################################################################################################################
    ###############...###########################################################################################################################
    #################.###########################################################################################################################
    #################.###########################################################################################################################
    #################.###########################################################################################################################
    #############.....###########################################################################################################################
    #############.###############################################################################################################################
    ###########...###############################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    #########...#################################################################################################################################
    #########.###################################################################################################################################
    #########.###################################################################################################################################
    #########.###################################################################################################################################
    #########.###################################################################################################################################
    #########.###################################################################################################################################
    #########.###################################################################################################################################
    #########.###################################################################################################################################
    #########.###################################################################################################################################
    #########.###################################################################################################################################
    #########.......#############################################################################################################################
    ###############.#############################################################################################################################
    ###########.....#############################################################################################################################
    ###########.#################################################################################################################################
    ###########...###############################################################################################################################
    #############.###############################################################################################################################
    ###########...###############################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########.#################################################################################################################################
    ###########...#...###########################################################################################################################
    #############.#.#.###########################################################################################################################
    #############...#.###########################################################################################################################
    #################.###########################################################################################################################
    #############.....###########################################################################################################################
    #############.###############################################################################################################################
    #############.###############################################################################################################################
    #############.###############################################################################################################################
    #.....#######.###############################################################################################################################
    #.###.#######.###############################################################################################################################
    #S###.........###############################################################################################################################
    #############################################################################################################################################`);
      const pathTree = buildPathTree(input, 'right', []);
      const paths = pathTree.filter(path => path.foundEnd).map(path => path.moves);
      expect(calculateResult(paths)).toBe(0);
    })
  })
});
